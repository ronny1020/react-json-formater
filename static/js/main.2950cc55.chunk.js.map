{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["JsonFormatter","json","tabWith","jsonObject","JSON","repeatTabSpace","times","repeatedTabSpace","i","className","key","repeat","TabSpaceRepeatTimes","Object","data","dataJSX","keys","categorize","App","ReactDOM","render","document","getElementById"],"mappings":"8MAEaA,EAAgB,SAAC,GAAsB,IAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9BC,EAAaC,WAAnB,GAEMC,EAAiB,SAACC,GAEtB,IADA,IAAMC,EAAN,GACSC,EAAT,EAAgBA,EAAhB,EAA2BA,IACzBD,OACE,0BAAME,UAAN,sBAAsCC,IAAKF,GACxC,OAAOG,OAAOT,GAFnBK,KAMF,UAEEK,EAAJ,EAmGA,OACE,yBAAKH,UAAU,cACb,6BAnGJ,cACE,OAAQI,+BAAR,IACE,sBAGE,OAFgB,0BAAMJ,UAAU,qBAAhC,GAKF,sBAEE,OADgB,0BAAMA,UAAU,qBAAhB,MAAhB,KAIF,uBAME,OALgBK,EACd,0BAAML,UAAU,mBADE,QAGlB,0BAAMA,UAAU,oBAHlB,SAQF,sBACE,IAAMM,EAAN,GACAA,OACE,kBAAC,IAAD,UAAgBL,IAAK,KACnB,0BAAMD,UAAU,oBADlB,KAEE,uBAHJM,QAMA,IAAMC,EAAOH,YAAb,GAEA,IAAK,IAAL,KADAD,IACA,EACEG,OACE,kBAAC,IAAD,UAAgBL,IAAKF,GAClBH,EADH,GAEE,0BAAMI,UAAU,uBAAuB,MAFzC,KAGE,0BAAMA,UAAU,oBAHlB,MAIGQ,EAAWH,EAJd,IAKGN,IAAMQ,EAAKA,SAAXR,QACC,0BAAMC,UAAU,oBANpB,KAQE,uBATJM,QAoBF,OAPAH,IACAG,OACE,kBAAC,IAAD,UAAgBL,IAAK,KAClBL,EADH,GAEE,0BAAMI,UAAU,oBAHpBM,OAMA,EAGF,qBACE,IAAMA,EAAN,GAEAA,OACE,kBAAC,IAAD,UAAgBL,IAAI,KAClB,0BAAMD,UAAU,sBADlB,KAEE,uBAHJM,QAMAH,IACA,IAAK,IAAIJ,EAAT,EAAgBA,EAAIM,EAApB,OAAiCN,IAC/BO,OACE,kBAAC,IAAD,UAAgBL,IAAKF,GAClBH,EADH,GAEGY,EAAWH,EAFd,IAGGN,IAAMM,SAANN,OACC,0BAAMC,UAAU,oBAJpB,KAME,uBAPJM,QAkBF,OAPAH,IACAG,OACE,kBAAC,IAAD,UAAgBL,IAAI,KACjBL,EADH,GAEE,0BAAMI,UAAU,sBAHpBM,OAMA,EAGF,oBAEE,OADgB,0BAAMN,UAAU,mBAAhC,SAUIQ,CAFV,MCpEaC,EA1CH,WAuCV,OAAO,kBAAC,EAAD,CAAejB,KAtCV,ygBAsCwBC,QAAQ,O,OCtC9CiB,EAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2950cc55.chunk.js","sourcesContent":["import React from 'react'\n\nexport const JsonFormatter = ({ json, tabWith }) => {\n  const jsonObject = JSON.parse(json)\n\n  const repeatTabSpace = (times) => {\n    const repeatedTabSpace = []\n    for (let i = 0; i < times; i++) {\n      repeatedTabSpace.push(\n        <span className='react-json-tabSpace' key={i}>\n          {'\\xa0'.repeat(tabWith || 4)}\n        </span>\n      )\n    }\n    return repeatedTabSpace\n  }\n  let TabSpaceRepeatTimes = 0\n\n  function categorize(data) {\n    switch (Object.prototype.toString.call(data)) {\n      case '[object Number]': {\n        const dataJSX = <span className='react-json-number'>{data}</span>\n\n        return dataJSX\n      }\n\n      case '[object String]': {\n        const dataJSX = <span className='react-json-string'>\"{data}\"</span>\n        return dataJSX\n      }\n\n      case '[object Boolean]': {\n        const dataJSX = data ? (\n          <span className='react-json-true'>true</span>\n        ) : (\n          <span className='react-json-false'>false</span>\n        )\n        return dataJSX\n      }\n\n      case '[object Object]': {\n        const dataJSX = []\n        dataJSX.push(\n          <React.Fragment key={'{'}>\n            <span className='react-json-brace'>{'{'}</span>\n            <br />\n          </React.Fragment>\n        )\n        const keys = Object.keys(data)\n        TabSpaceRepeatTimes++\n        for (const i in data) {\n          dataJSX.push(\n            <React.Fragment key={i}>\n              {repeatTabSpace(TabSpaceRepeatTimes)}\n              <span className='react-json-property'>{`\"` + i + `\"`}</span>\n              <span className='react-json-colon'>: </span>\n              {categorize(data[i])}\n              {i === keys[keys.length - 1] ? null : (\n                <span className='react-json-comma'>,</span>\n              )}\n              <br />\n            </React.Fragment>\n          )\n        }\n        TabSpaceRepeatTimes--\n        dataJSX.push(\n          <React.Fragment key={'}'}>\n            {repeatTabSpace(TabSpaceRepeatTimes)}\n            <span className='react-json-brace'>{'}'}</span>\n          </React.Fragment>\n        )\n        return dataJSX\n      }\n\n      case '[object Array]': {\n        const dataJSX = []\n\n        dataJSX.push(\n          <React.Fragment key='['>\n            <span className='react-json-bracket'>[</span>\n            <br />\n          </React.Fragment>\n        )\n        TabSpaceRepeatTimes++\n        for (let i = 0; i < data.length; i++) {\n          dataJSX.push(\n            <React.Fragment key={i}>\n              {repeatTabSpace(TabSpaceRepeatTimes)}\n              {categorize(data[i])}\n              {i === data.length - 1 ? null : (\n                <span className='react-json-comma'>,</span>\n              )}\n              <br />\n            </React.Fragment>\n          )\n        }\n        TabSpaceRepeatTimes--\n        dataJSX.push(\n          <React.Fragment key=']'>\n            {repeatTabSpace(TabSpaceRepeatTimes)}\n            <span className='react-json-bracket'>]</span>\n          </React.Fragment>\n        )\n        return dataJSX\n      }\n\n      case '[object Null]': {\n        const dataJSX = <span className='react-json-null'>null</span>\n        return dataJSX\n      }\n      default:\n      // code block\n    }\n  }\n\n  return (\n    <div className='react-json'>\n      <div>{categorize(jsonObject)}</div>\n    </div>\n  )\n}\n","import React from 'react'\r\n\r\nimport { JsonFormatter } from 'react-json-formatter'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const sample = `{\r\n   \"string\":\"ABCDE\",\r\n   \"number\":1,\r\n   \"null\":null,\r\n   \"boolean\":true,\r\n   \"object\":{\r\n      \"string\":\"ABCDE\",\r\n      \"number\":1,\r\n      \"null\":null,\r\n      \"boolean\":true\r\n   },\r\n   \"array\":[\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n      \"string\":\"ABCDE\",\r\n      \"number\":1,\r\n      \"null\":null,\r\n      \"boolean\":true,\r\n         \"array\":[\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n      \"string\":\"ABCDE\",\r\n      \"number\":1,\r\n      \"null\":null,\r\n      \"boolean\":true\r\n   }\r\n   ]\r\n   }\r\n   ]\r\n}\r\n`\r\n\r\n  return <JsonFormatter json={sample} tabWith='4' />\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}